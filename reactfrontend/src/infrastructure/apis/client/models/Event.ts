/* tslint:disable */
/* eslint-disable */
/**
 * MobyLab Web App
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { User } from './User';
import {
    UserFromJSON,
    UserFromJSONTyped,
    UserToJSON,
} from './User';

/**
 * 
 * @export
 * @interface Event
 */
export interface Event {
    /**
     * 
     * @type {string}
     * @memberof Event
     */
    id?: string;
    /**
     * 
     * @type {Date}
     * @memberof Event
     */
    createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof Event
     */
    updatedAt?: Date;
    /**
     * 
     * @type {string}
     * @memberof Event
     */
    content?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Event
     */
    title?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Event
     */
    location?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Event
     */
    date?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Event
     */
    userId?: string;
    /**
     * 
     * @type {User}
     * @memberof Event
     */
    user?: User;
}

/**
 * Check if a given object implements the Event interface.
 */
export function instanceOfEvent(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function EventFromJSON(json: any): Event {
    return EventFromJSONTyped(json, false);
}

export function EventFromJSONTyped(json: any, ignoreDiscriminator: boolean): Event {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'createdAt': !exists(json, 'createdAt') ? undefined : (new Date(json['createdAt'])),
        'updatedAt': !exists(json, 'updatedAt') ? undefined : (new Date(json['updatedAt'])),
        'content': !exists(json, 'content') ? undefined : json['content'],
        'title': !exists(json, 'title') ? undefined : json['title'],
        'location': !exists(json, 'location') ? undefined : json['location'],
        'date': !exists(json, 'date') ? undefined : json['date'],
        'userId': !exists(json, 'userId') ? undefined : json['userId'],
        'user': !exists(json, 'user') ? undefined : UserFromJSON(json['user']),
    };
}

export function EventToJSON(value?: Event | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'createdAt': value.createdAt === undefined ? undefined : (value.createdAt.toISOString()),
        'updatedAt': value.updatedAt === undefined ? undefined : (value.updatedAt.toISOString()),
        'content': value.content,
        'title': value.title,
        'location': value.location,
        'date': value.date,
        'userId': value.userId,
        'user': UserToJSON(value.user),
    };
}

