/*
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";

export const description: msRest.OperationParameter = {
  parameterPath: [
    "options",
    "description"
  ],
  mapper: {
    serializedName: "Description",
    type: {
      name: "String"
    }
  }
};
export const email: msRest.OperationURLParameter = {
  parameterPath: "email",
  mapper: {
    required: true,
    serializedName: "email",
    type: {
      name: "String"
    }
  }
};
export const file: msRest.OperationParameter = {
  parameterPath: [
    "options",
    "file"
  ],
  mapper: {
    serializedName: "File",
    type: {
      name: "Stream"
    }
  }
};
export const id: msRest.OperationURLParameter = {
  parameterPath: "id",
  mapper: {
    required: true,
    serializedName: "id",
    type: {
      name: "Uuid"
    }
  }
};
export const idPost: msRest.OperationURLParameter = {
  parameterPath: "idPost",
  mapper: {
    required: true,
    serializedName: "idPost",
    type: {
      name: "Uuid"
    }
  }
};
export const idUser: msRest.OperationURLParameter = {
  parameterPath: "idUser",
  mapper: {
    required: true,
    serializedName: "idUser",
    type: {
      name: "Uuid"
    }
  }
};
export const idUserInitiator: msRest.OperationURLParameter = {
  parameterPath: "idUserInitiator",
  mapper: {
    required: true,
    serializedName: "idUserInitiator",
    type: {
      name: "Uuid"
    }
  }
};
export const page: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "page"
  ],
  mapper: {
    serializedName: "Page",
    type: {
      name: "Number"
    }
  }
};
export const pageSize: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "pageSize"
  ],
  mapper: {
    serializedName: "PageSize",
    type: {
      name: "Number"
    }
  }
};
export const search: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "search"
  ],
  mapper: {
    serializedName: "Search",
    type: {
      name: "String"
    }
  }
};
